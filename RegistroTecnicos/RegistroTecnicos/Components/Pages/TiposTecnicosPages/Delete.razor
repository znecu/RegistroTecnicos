@page "/TipoTecnico/Delete/{TiposTecnicosId:int}"
@inject TiposTecnicosServices tipoTecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Eliminar</PageTitle>
<div class="container">
    <div class="shadow-lg">

        @*Header*@
        <div class="card-header text-center">
            <h3><strong>Eliminar un tipo de t&eacute;cnico</strong></h3>
        </div>

        @*Body*@
        <div class="card-body">
            <div class="text-center mt-3">
                <h5><strong>¿Está seguro de que desea eliminar este tipo de t&eacute;cnico?</strong></h5>
            </div>
            <ul class="mt-4">
                <li><strong>TipoTecnicoId: </strong>@TipoTecnicos.TiposTecnicosId</li>
                <li><strong>Descripci&oacute;n: </strong>@TipoTecnicos.Descripcion</li>
            </ul>
        </div>

        @*Footer*@
        <div class="card-footer text-end mt-3">
            <button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
            <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int TiposTecnicosId { get; set; }
    public TiposTecnicos TipoTecnicos { get; set; } = new TiposTecnicos();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        TipoTecnicos = await tipoTecnicosServices.Buscar(TiposTecnicosId);
    }

    private async Task Eliminar()
    {
        var Eliminar = await tipoTecnicosServices.Eliminar(TiposTecnicosId);

        if (Eliminar)
        {
            Mensaje = "Se ha eliminadao correctamente. ";
            navigationManager.NavigateTo("/TipoTecnico/Index");
        }
        else
        {
            Mensaje = "No se ha podido eliminar. ";
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/TipoTecnico/Index");
    }

}
