@page "/Cotizacion/Create"
@inject CotizacionesServices cotizacionesServices
@inject ClientesServices clienteServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer
<PageTitle>Crear</PageTitle>
<EditForm Model="Cotizaciones" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="shadow-lg">

            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Crear cotizaci&oacute;n</strong></h3>
            </div>

            @*Body*@
            <div class="card-body">

                @*CotizacionId*@
                <div class="col-1">
                    <label class="form-label"><strong>CotizacionId</strong></label>
                    <InputNumber class="form-control" readonly @bind-Value="Cotizaciones.CotizacionId"></InputNumber>
                </div>

                @*ClienteId*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>ClienteId</strong></label>
                    <InputSelect class="form-select" @bind-Value="Cotizaciones.ClienteId">
                        <option value="0" selected disabled>Seleccione un ClienteId</option>
                        @foreach (var cliente in ListaCliente)
                        {
                            <option value="@cliente.ClientesId">@cliente.ClientesId - @cliente.Nombres</option>
                        }

                    </InputSelect>
                </div>

                @*Fecha*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Cotizaciones.Fecha"></InputDate>

                </div>

                @*Observacion*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Observaci&oacute;n</strong></label>
                    <InputText class="form-control" @bind-Value="Cotizaciones.Observacion"></InputText>
                    <ValidationMessage For="(()=> Cotizaciones.Observacion)" />
                </div>

                @*Monto*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" readonly @bind-Value="Cotizaciones.Monto"></InputNumber>
                    <ValidationMessage For="(()=> Cotizaciones.Monto)" />
                </div>
            </div>

            @*Detalle*@
            <div class="border border-success mb-4">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0"><strong>Detalle</strong></h5>

                </div>
                <div class="card-body p-3">
                    <div class="row align-items-center m-0">

                        @*Articulo*@
                        <div class="col-sm-4 p-0 text-center">
                            <InputSelect class="form-select" @bind-Value="Seleccionado">
                                <option value="0" selected disabled>--Seleccione un articulo--</option>
                                @foreach (var articulo in ListaArticulo)
                                {
                                    <option value="@articulo.ArticuloId">@articulo.Descripcion</option>
                                }

                            </InputSelect>
                        </div>

                        @*Cantidad*@
                        <div class="col-sm-3 p-0">
                            <div class="input-group">
                                <label class="input-group-text"><strong>Cantidad</strong></label>
                                <InputNumber class="form-control" @bind-Value="CotizacionDetalle.Cantidad"></InputNumber>
                            </div>
                        </div>

                        @*Precio*@
                        <div class="col-sm-3 p-0">
                            <div class="input-group">
                                <label class="input-group-text"><strong>Precio</strong></label>
                                <InputNumber class="form-control" readonly @bind-Value="CotizacionDetalle.Precio"></InputNumber>
                            </div>
                        </div>

                        @*Agregar*@
                        <div class="col-sm-1 p-0">
                            <button type="button" class="btn btn-outline-success bi bi-plus" @onclick="Agregar">Agregar</button>
                        </div>

                        @*Tabla*@
                        <div class="table-responsive mt-3">
                            <table class="table table-bordered table-light m-1">
                                <thead class="thead">
                                    <tr class="table">
                                        <th>Art&iacute;culoId</th>
                                        <th>Cantidad</th>
                                        <th>Precio</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var detalle in ListaDetalle)
                                    {
                                        <tr>
                                            <td>@detalle.ArticuloId</td>
                                            <td>@detalle.Cantidad</td>
                                            <td>@detalle.Precio</td>
                                            <td><button @onclick="@(() => Remover(detalle))" class="btn btn-danger bi bi-trash" type="button">Remover</button></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class=" btn btn-primary" @onclick="() => Volver()">Volver</button>
                <button type="submit" class=" btn btn-success">Guardar</button>
            </div>
        </div>
    </div>
    @Mensaje
</EditForm>
@code {
    public CotizacionesDetalle CotizacionDetalle { get; set; } = new CotizacionesDetalle();
    public List<CotizacionesDetalle> ListaDetalle { get; set; } = new List<CotizacionesDetalle>();
    public Cotizaciones Cotizaciones { get; set; } = new Cotizaciones();
    public List<Cotizaciones> ListaCotizacion { get; set; } = new List<Cotizaciones>();
    public List<Clientes> ListaCliente { get; set; } = new List<Clientes>();
    public List<Articulos> ListaArticulo { get; set; } = new List<Articulos>();
    public string Mensaje { get; set; } = string.Empty;
    public int Seleccionado { get; set; }
    public decimal Utilizado { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListaCotizacion = await cotizacionesServices.Listar(c => c.CotizacionId > 0);
        ListaCliente = await clienteServices.Listar(c => c.ClientesId > 0);
        ListaArticulo = await cotizacionesServices.ListarArticulos();
    }

    public async Task Guardar()
    {
        Cotizaciones.CotizacionesDetalles = ListaDetalle;
        var crear = await cotizacionesServices.Guardar(Cotizaciones);

        if (crear)
        {
            Mensaje = "Creado exitosamente.";
            Volver();
        }

        else
        {
            Mensaje = "No se ha podido crear la cotización. ";
        }
    }

    public void Agregar()
    {
        var seleccionado = ListaArticulo
        .FirstOrDefault(a => a.ArticuloId == Seleccionado);

        if (seleccionado != null && CotizacionDetalle.Cantidad > 0)
        {
            CotizacionDetalle.Precio = seleccionado.Precio;

            var nuevoDetalle = new CotizacionesDetalle
                {
                    ArticuloId = seleccionado.ArticuloId,
                    Cantidad = CotizacionDetalle.Cantidad,
                    Precio = seleccionado.Precio
                };

            Cotizaciones.Monto += nuevoDetalle.Cantidad * nuevoDetalle.Precio;

            ListaDetalle.Add(nuevoDetalle);
            CotizacionDetalle = new CotizacionesDetalle();
            Seleccionado = 0;
        }
    }

    public void Remover(CotizacionesDetalle eliminarDetalle)
    {
        ListaDetalle.Remove(eliminarDetalle);

        Cotizaciones.Monto -= eliminarDetalle.Cantidad * eliminarDetalle.Precio;

        Seleccionado = eliminarDetalle.ArticuloId;
        CotizacionDetalle.Cantidad = eliminarDetalle.Cantidad;
        CotizacionDetalle.Precio = eliminarDetalle.Precio;

    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Cotizacion/Index");
    }
}
