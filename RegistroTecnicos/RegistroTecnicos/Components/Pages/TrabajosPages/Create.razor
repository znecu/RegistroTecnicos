@page "/Trabajo/Create"
@inject TrabajosServices trabajosServices
@inject TecnicoServices tecnicoServices
@inject ClientesServices clienteServices
@inject PrioridadesServices prioridadesServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Crear</PageTitle>
<EditForm Model="Trabajo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="shadow-lg">

            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Crear trabajo</strong></h3>
            </div>

            @*Body*@
            <div class="card-body">

                @*TrabajoId*@
                <div class="col-1">
                    <label class="form-label"><strong>TrabajoId</strong></label>
                    <InputNumber class="form-control" readonly @bind-Value="Trabajo.TrabajoId"></InputNumber>
                </div>

                @*Fecha*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Trabajo.Fecha"></InputDate>

                </div>

                @*NombreCliente*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>NombreCliente</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.ClienteId">
                        <option value="0" selected disabled>Seleccione un Cliente</option>
                        @foreach (var cliente in ListaCliente)
                        {
                            <option value="@cliente.ClientesId">@cliente.Nombres</option>
                        }

                    </InputSelect>
                </div>
                @*Prioridad*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Prioridad</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.PrioridadId">
                        <option value="0" selected disabled>Seleccione una Prioridad</option>
                        @foreach (var prioridad in ListaPrioridades)
                        {
                            <option value="@prioridad.PrioridadId">@prioridad.Descripcion</option>
                        }
                    </InputSelect>
                </div>

                @*TecnicoId*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>TecnicoId</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.TecnicoId">
                        <option value="0" selected disabled>Seleccione un TecnicoId</option>
                        @foreach (var tecnico in ListaTecnico)
                        {
                            <option value="@tecnico.TecnicoId">@tecnico.TecnicoId - @tecnico.Nombres</option>
                        }

                    </InputSelect>
                </div>

                @*Descripcion*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Descripci&oacute;n</strong></label>
                    <InputText class="form-control" @bind-Value="Trabajo.Descripcion"></InputText>
                    <ValidationMessage For="(()=> Trabajo.Descripcion)" />
                </div>

                @*Monto*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" readonly @bind-Value="Trabajo.Monto"></InputNumber>
                    <ValidationMessage For="(()=> Trabajo.Monto)" />
                </div>
            </div>

            @*Detalle*@
            <div class="border border-success mb-4">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0"><strong>Detalle de art&iacute;culo</strong></h5>

                </div>
                <div class="card-body p-3">
                    <div class="row align-items-center m-0">

                        @*Articulo*@
                        <div class="col-sm-4 p-0 text-center">
                            <InputSelect class="form-select" @bind-Value="Seleccionado">
                                <option value="0" selected disabled>--Seleccione un articulo--</option>
                                @foreach (var articulo in ListaArticulo)
                                {
                                    <option value="@articulo.ArticuloId">@articulo.Descripcion</option>
                                }

                            </InputSelect>
                        </div>

                        @*Cantidad*@
                        <div class="col-sm-3 p-0">
                            <div class="input-group">
                                <label class="input-group-text"><strong>Cantidad</strong></label>
                                <InputNumber class="form-control" @bind-Value="TrabajoDetalle.Cantidad"></InputNumber>
                            </div>
                        </div>

                        @*Precio*@
                        <div class="col-sm-3 p-0">
                            <div class="input-group">
                                <label class="input-group-text"><strong>Precio</strong></label>
                                <InputNumber class="form-control" readonly @bind-Value="TrabajoDetalle.Precio"></InputNumber>
                            </div>
                        </div>

                        @*Agregar*@
                        <div class="col-sm-1 p-0">
                            <button type="button" class="btn btn-outline-success bi bi-plus" @onclick="Agregar">Agregar</button>
                        </div>

                        @*Tabla*@
                        <div class="table-responsive mt-3">
                            <table class="table table-bordered table-light m-1">
                                <thead class="thead">
                                    <tr class="table">
                                        <th>Art&iacute;culoId</th>
                                        <th>Cantidad</th>
                                        <th>Precio</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var detalle in ListaDetalle)
                                    {
                                        <tr>
                                            <td>@detalle.ArticuloId</td>
                                            <td>@detalle.Cantidad</td>
                                            <td>@detalle.Precio</td>
                                            <td><button @onclick="@(() => Remover(detalle))" class="btn btn-danger bi bi-trash" type="button">Remover</button></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class=" btn btn-primary" @onclick="() => Volver()">Volver</button>
                <button type="submit" class=" btn btn-success">Guardar</button>
            </div>
        </div>
    </div>
    @Mensaje
</EditForm>

@code {
    public Trabajos Trabajo { get; set; } = new Trabajos();
    public List<Trabajos> ListaTrabajo { get; set; } = new List<Trabajos>();
    public List<Clientes> ListaCliente { get; set; } = new List<Clientes>();
    public List<Tecnicos> ListaTecnico { get; set; } = new List<Tecnicos>();
    public List<Prioridades> ListaPrioridades { get; set; } = new List<Prioridades>();
    public List<Articulos> ListaArticulo { get; set; } = new List<Articulos>();
    public TrabajoDetalle TrabajoDetalle { get; set; } = new TrabajoDetalle();
    public List<TrabajoDetalle> ListaDetalle { get; set; } = new List<TrabajoDetalle>();
    public string Mensaje { get; set; } = string.Empty;
    public int Seleccionado { get; set; }
    public decimal Utilizado { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListaTrabajo = await trabajosServices.Listar(t => t.TrabajoId > 0);
        ListaCliente = await clienteServices.Listar(c => c.ClientesId > 0);
        ListaTecnico = await tecnicoServices.Listar(t => t.TecnicoId > 0);
        ListaPrioridades = await prioridadesServices.Listar(p => p.PrioridadId > 0);
        ListaArticulo = await trabajosServices.ListarArticulos();
    }

    public async Task Guardar()
    {
        Trabajo.TrabajoDetalle = ListaDetalle;
        var crear = await trabajosServices.Guardar(Trabajo);

        if (crear)
        {
            Mensaje = "Creado exitosamente.";
            Volver();
        }

        else
        {
            Mensaje = "No se ha podido crear el trabajo. ";
        }
    }

    public void Agregar()
    {
        var seleccionado = ListaArticulo
        .FirstOrDefault(a => a.ArticuloId == Seleccionado);

        if (seleccionado != null && TrabajoDetalle.Cantidad > 0)
        {
            TrabajoDetalle.Precio = seleccionado.Precio;

            var nuevoDetalle = new TrabajoDetalle
                {
                    ArticuloId = seleccionado.ArticuloId,
                    Cantidad = TrabajoDetalle.Cantidad,
                    Precio = seleccionado.Precio
                };

            Trabajo.Monto += nuevoDetalle.Cantidad * nuevoDetalle.Precio;

            ListaDetalle.Add(nuevoDetalle);
            TrabajoDetalle = new TrabajoDetalle();
        }
    }

    public void Remover(TrabajoDetalle eliminarDetalle)
    {
        ListaDetalle.Remove(eliminarDetalle);

        Trabajo.Monto -= eliminarDetalle.Cantidad * eliminarDetalle.Precio;

        Seleccionado = eliminarDetalle.ArticuloId;
        TrabajoDetalle.Cantidad = eliminarDetalle.Cantidad;
        TrabajoDetalle.Precio = eliminarDetalle.Precio;

    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Trabajo/Index");
    }
}
