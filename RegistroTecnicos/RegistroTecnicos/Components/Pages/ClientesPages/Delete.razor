@page "/Cliente/Delete/{ClienteId:int}"
@inject ClientesServices clientesServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Eliminar</PageTitle>
<div class="container">
    <div class="shadow-lg">

        @*Header*@
        <div class="card-header text-center">
            <h3><strong>Eliminar cliente</strong></h3>
        </div>

        @*Body*@
        <div class="card-body">
            <div class="text-center mt-3">
                <h5><strong>¿Está seguro de que desea eliminar este cliente?</strong></h5>
            </div>
            <ul class="mt-4">
                <li><strong>Id: </strong>@Cliente.ClientesId</li>
                <li><strong>Nombre: </strong>@Cliente.Nombres</li>
                <li><strong>Whatsapp: </strong>@Cliente.Whatsapp</li>
            </ul>
        </div>
        @*Footer*@
        <div class="card-footer text-end mt-3">
            <button type="button" class="btn btn-primary" @onclick = "Volver">Volver</button>
            <button type="button" class="btn btn-danger" @onclick = "Eliminar"> Eliminar</button>
        </div>
    </div>
</div>
@Mensaje


@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes Cliente { get; set; } = new Clientes();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Cliente = await clientesServices.Buscar(ClienteId);
    }

    private async Task Eliminar()
    {
        var Eliminar = await clientesServices.Eliminar(Cliente.ClientesId);

        if (Eliminar)
        {
            Mensaje = "El cliente ha sido eliminado correctamente. ";
            Volver();
        }

        else
        {
            Mensaje = "No se ha podido eliminar al cliente. ";
        }
    }

    private void Volver()
    {
        navigationManager.NavigateTo("/Cliente/Index");
    }
}
