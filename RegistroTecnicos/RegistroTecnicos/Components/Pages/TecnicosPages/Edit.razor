@page "/Tecnico/Edit/{TecnicoId:int}"
@inject TecnicoServices tecnicoServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar</PageTitle>
<div class="container">
    <div class="shadow-lg">

        @*Header*@
        <div class="card-header text-center">
            <h3><strong>Editar t&eacute;cnico</strong></h3>
        </div>

        @*Body*@
        <div class="card-body">

            @*TecnicoId*@
            <div class="col-1 mt-2">
                <label class="form-label"><strong>TecnicoId</strong></label>
                <div class="id-input">
                    <InputNumber class=" form-control" readonly @bind-Value="Tecnico.TecnicoId"></InputNumber>
                </div>
            </div>

            @*Nombre*@
            <div class="col-2 mt-2">
                <label class="form-label"><strong>Nombre</strong></label>
                <InputText class="form-control" @bind-Value="Tecnico.NombreTecnico"></InputText>
                @* <ValidationMessage For="(()=> Tecnicos.NombreTecnico)"/> *@
            </div>

            @*SueldoHora*@
            <div class="col-2 mt-2">
                <label class="form-label"><strong>Sueldo por Hora</strong></label>
                <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora" step=" 0.1" min="0"></InputNumber>
            </div>
        </div>
        @*Footer*@
        <div class="card-footer text-end mt-3">
            <button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
            <button type="button" class="btn btn-warning" @onclick="Editar">Editar</button>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos Tecnico { get; set; } = new Tecnicos();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicoServices.Buscar(TecnicoId);
    }

    public async Task Editar()
    {
        if (await Validar())
        {
            Mensaje = "Ya existe un técnico con este nombre. ";
            return;
        }

        var crear = await tecnicoServices.Guardar(Tecnico);

        if (crear)
        {
            Mensaje = "Se ha modificado el técnico correctamente. ";
            navigationManager.NavigateTo("/Tecnicos/Index");
        }
        else
        {
            Mensaje = "No se ha modificado correctamente. ";
        }
    }

    private async Task<bool> Validar()
    {
        var existe = await tecnicoServices.ExisteTecnico(Tecnico.TecnicoId, Tecnico.NombreTecnico);
        return existe;
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Index");
    }


}