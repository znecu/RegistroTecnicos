@page "/Tecnico/Create"
@inject TecnicoServices tecnicoServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="shadow-lg">

            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Crear t&eacute;cnico </strong></h3>
            </div>

            @*Body*@
            <div class="card-body">
                @*TecnicoId*@
                <div class="col-1">
                    <label class="form-label"><strong>TecnicoId</strong></label>
                    <InputNumber class="form-control" readonly @bind-Value="Tecnico.TecnicoId"></InputNumber>
                </div>

                @*Nombre*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Nombre</strong></label>
                    <InputText class="form-control" @bind-Value="Tecnico.Nombres"></InputText>
                    <ValidationMessage For="(()=> Tecnico.Nombres)"/>
                </div>

                @*SueldoHora*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Sueldo por hora</strong></label>
                    <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"></InputNumber>
                    <ValidationMessage For="(()=> Tecnico.SueldoHora)"/>
                </div>
            </div>

            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary " @onclick="() => Volver()">Volver</button>
                <button type="submit" class="btn btn-success"> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>


@code {
    public Tecnicos Tecnico { get; set; } = new Tecnicos();
    public string Mensaje { get; set; } = string.Empty;

    public async Task Guardar()
    {
        if (await Validar())
        {
            Mensaje = "Ya existe un técnico con este nombre. Por favor, introduzca un nombre válido.";
            return;
        }

        var crear = await tecnicoServices.Guardar(Tecnico);

        if (crear)
        {
            Mensaje = "Creado exitosamente.";
            navigationManager.NavigateTo("/Tecnicos/Index");

        }

        else
        {
            Mensaje = "No se ha podido crear el técnico.";
        }
    }

    private async Task<bool> Validar()
    {
        var existe = await tecnicoServices.ExisteTecnico(Tecnico.TecnicoId, Tecnico.Nombres);
        return existe;
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Index");
    }

}
